// <auto-generated />
using System;
using BOX_Contatos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BOX_Contatos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BOX_Contatos.Models.Contatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("DataCadastro")
                        .HasColumnType("text")
                        .HasColumnName("dataCadastro");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("text")
                        .HasColumnName("dataEdicao");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("text")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("contatos");
                });

            modelBuilder.Entity("BOX_Contatos.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Assunto")
                        .HasColumnType("text")
                        .HasColumnName("assunto");

                    b.Property<int?>("ContatosId")
                        .HasColumnType("integer")
                        .HasColumnName("id_contatos");

                    b.Property<string>("FimAtendimento")
                        .HasColumnType("text")
                        .HasColumnName("fimAtendimento");

                    b.Property<string>("InicioAtendimento")
                        .HasColumnType("text")
                        .HasColumnName("inicioAtendimento");

                    b.HasKey("Id");

                    b.HasIndex("ContatosId");

                    b.ToTable("telefone");
                });

            modelBuilder.Entity("BOX_Contatos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataCadastro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dataCadastro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("TokenUser")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("BOX_Contatos.Models.Contatos", b =>
                {
                    b.HasOne("BOX_Contatos.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BOX_Contatos.Models.Telefone", b =>
                {
                    b.HasOne("BOX_Contatos.Models.Contatos", "Contatos")
                        .WithMany()
                        .HasForeignKey("ContatosId");

                    b.Navigation("Contatos");
                });
#pragma warning restore 612, 618
        }
    }
}
